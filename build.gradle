// set JAVA_HOME=C:\Program Files\Java\jdk-11.0.5+10

plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.8'
    id 'org.beryx.runtime' version '1.8.0'
    id 'org.unbroken-dome.xjc' version '1.4.2'
}

dependencies {
    // ControlsFX
    implementation ('org.controlsfx:controlsfx:11.0.0-RC2') {
        exclude group: 'org.openjfx', module: '*'
    }

    // Math
    implementation 'com.udojava:EvalEx:2.4'
    implementation 'com.ibm.icu:icu4j:65.1'

    // Apache POI
    implementation 'org.apache.poi:poi-ooxml:4.0.1'

    // Jasperreports
    implementation 'net.sf.jasperreports:jasperreports:6.10.0'
    implementation 'net.sf.jasperreports:jasperreports-fonts:6.10.0'
    implementation ('com.lowagie:itext:2.1.7') {
        exclude group: 'org.bouncycastle', module: 'bcmail-jdk15on'
        exclude group: 'org.bouncycastle', module: 'bcpkix-jdk15on'
    }

    // JAXB
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'

    // XML Diff
    implementation 'org.xmlunit:xmlunit-core:2.6.3'

    // test dependencies
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

repositories {
    mavenCentral()
}

javafx {
    version = '13.0.1'
    modules = ['javafx.controls']
}

xjcGenerate {
    source = fileTree('src/main/resources') { include '*.xsd' }
}

version = '19.12.05'
def company = 'My Company'

mainClassName = "com.example.hellofx.Launcher"
applicationName = 'hello-fx'

application {
    // mainClassName = "com.example.hellofx.Launcher"
    // applicationName = 'hello-fx'
    applicationDefaultJvmArgs =  [
            // necessary for ControlsFX
            "--add-opens=javafx.base/com.sun.javafx.event=ALL-UNNAMED",
            "--add-opens=javafx.base/com.sun.javafx.collections=ALL-UNNAMED",
            "--add-opens=javafx.base/com.sun.javafx.runtime=ALL-UNNAMED",
            // XXX many more necessary depending on control

            // necessary for Jasperreports XML parsing
            // https://github.com/TIBCOSoftware/jasperreports/issues/61
            "--add-opens=java.xml/com.sun.org.apache.xerces.internal.util=ALL-UNNAMED",
    ]
}

runtime {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    jpackage {
        imageName = applicationName // "hello-fx"
        installerName = applicationName
        // Set the environment property BADASS_JLINK_JPACKAGE_HOME or explicitly configure the below property
        def os = org.gradle.internal.os.OperatingSystem.current()
        if(os.macOsX) {
            jpackageHome = '/Library/Java/JavaVirtualMachines/jdk-14-jpackage.jdk/Contents/Home'
        } else if(os.windows) {
            jpackageHome = 'C:/Program Files/Java/jdk-14-jpackage'
        }
        jvmArgs = []
        // jvmArgs = ['-Dfxgl.sliding.puzzle.dummy=nothingElse', '-Dfxgl.sliding.puzzle.title=somethingElse']
        installerOptions = [
                // '--file-associations', 'src/main/resources/associations.properties',
                '--app-version', version,
                '--vendor', company,
                '--copyright', company,
        ]
        if(os.macOsX) {
            imageOptions = ['--icon', 'src/main/deploy/package/macosx/hello.icns']
            installerOptions += [
/*
                '--mac-sign',
                '--mac-signing-key-user-name', System.getenv('SIGNING_KEY_USER_NAME'),
                '--mac-signing-keychain', System.getenv('SIGNING_KEYCHAIN_PATH')
*/
            ]
        } else if(os.windows) {
            imageOptions = ['--icon', 'src/main/deploy/package/windows/hello.ico']
            installerType = 'msi'
            installerOptions += [
                    '--win-per-user-install',
                    // , '--win-dir-chooser'
                    '--win-menu',
                    '--win-menu-group', company,
                    '--win-shortcut',
                    // '--win-upgrade-uuid', '027D194C-359B-11B2-A85C-C5D71105C10C',
            ]
        }
    }
}
