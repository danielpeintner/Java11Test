// set JAVA_HOME=C:\Program Files\Java\jdk-11.0.2
// set JAVA_HOME=C:\Program Files\Java\jdk-13

plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.8'
    id 'org.beryx.jlink' version '2.16.4'
    // id 'org.unbroken-dome.xjc' version '1.4.2'
}

dependencies {
	// implementation 'org.controlsfx:controlsfx:8.40.12'
	// https://github.com/controlsfx/controlsfx
	// implementation 'org.controlsfx:controlsfx:9.0.1-SNAPSHOT'
	// implementation 'org.controlsfx:controlsfx:11.0.0-RC2'
    implementation ('org.controlsfx:controlsfx:11.0.0-RC2') {
        exclude group: 'org.openjfx', module: '*'
    }
    
	implementation 'xmlunit:xmlunit:1.6'

    // implementation 'javax.xml.bind:jaxb-api:2.3.1'
    // implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'

	// test dependencies
	testCompile group: 'junit', name: 'junit', version: '4.12'
}

repositories {
    mavenCentral()
	maven {url 'https://oss.sonatype.org/content/repositories/snapshots'}     // This is added for snapshot
}

javafx {
    version = '13.0.1'
    modules = ['javafx.controls', 'javafx.swing', 'javafx.fxml', 'javafx.media', 'javafx.web']
}

run {
    if (osdetector.os == 'windows') {
        // Temporal fix for Eclipse with JDK 1.8 and Windows
        systemProperty "java.library.path", "C:tmp"
    }
}

/* xjcGenerate {
    source = fileTree('src/main/resources') { include '*.xsd' }
} */

mainClassName = "com.example/com.example.HelloFX"

application {
    applicationDefaultJvmArgs =  [
            "--add-opens=javafx.base/com.sun.javafx.runtime=org.controlsfx.controls",
            "--add-opens=javafx.base/com.sun.javafx.collections=org.controlsfx.controls",
			"--add-opens=javafx.base/com.sun.javafx.event=org.controlsfx.controls",
            // "--add-opens=javafx.base/com.sun.javafx.event=ALL-UNNAMED",
            "--add-opens=javafx.graphics/com.sun.javafx.css=org.controlsfx.controls",
			// "--add-opens=javafx.graphics/com.sun.javafx.css=ALL-UNNAMED",
            "--add-opens=javafx.graphics/com.sun.javafx.scene=org.controlsfx.controls",
            "--add-opens=javafx.graphics/com.sun.javafx.scene.traversal=org.controlsfx.controls",
            "--add-opens=javafx.graphics/javafx.scene=org.controlsfx.controls",
            "--add-opens=javafx.controls/com.sun.javafx.scene.control=org.controlsfx.controls",
            "--add-opens=javafx.controls/com.sun.javafx.scene.control.behavior=org.controlsfx.controls",
            "--add-opens=javafx.controls/javafx.scene.control.skin=org.controlsfx.controls"
    ]
}

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        // name = 'sliding-puzzle'
        // name = 'com.example/com.example.HelloFX'
        name = 'hello-fx'
        jvmArgs = []
        // jvmArgs = ['-Dfxgl.sliding.puzzle.dummy=nothing', '-Dfxgl.sliding.puzzle.title=something']
    }
    jpackage {
        // Set the environment property BADASS_JLINK_JPACKAGE_HOME or explicitly configure the below property
        // jpackageHome = '/usr/lib/jvm/jdk13'
		jpackageHome = 'C:/Program Files/Java/jdk-13'
        def os = org.gradle.internal.os.OperatingSystem.current()
        jvmArgs = []
        // jvmArgs = ['-Dfxgl.sliding.puzzle.dummy=nothingElse', '-Dfxgl.sliding.puzzle.title=somethingElse']
        if(os.macOsX) {
            installerOptions = [
                '--mac-sign',
/*
                '--mac-signing-key-user-name', System.getenv('SIGNING_KEY_USER_NAME'),
                '--mac-signing-keychain', System.getenv('SIGNING_KEYCHAIN_PATH')
*/
            ]
        } else if(os.windows) {
            installerOptions = ['--win-per-user-install', '--win-dir-chooser']
        }
    }
}


apply plugin : 'java'