// set JAVA_HOME=C:\Program Files\Java\jdk-11.0.5+10

plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.9'
    id 'org.beryx.jlink' version '2.22.4'
    // id 'org.unbroken-dome.xjc' version '1.4.3'
    id 'org.unbroken-dome.xjc' version '2.0.0' // https://github.com/unbroken-dome/gradle-xjc-plugin
}

dependencies {
	// implementation 'org.controlsfx:controlsfx:8.40.12'
	// https://github.com/controlsfx/controlsfx
	// implementation 'org.controlsfx:controlsfx:9.0.1-SNAPSHOT'
	// implementation 'org.controlsfx:controlsfx:11.0.0-RC2'
    implementation ('org.controlsfx:controlsfx:11.1.0') {
        exclude group: 'org.openjfx', module: '*'
    }

	// implementation 'org.xmlunit:xmlunit-core:2.6.3'

    // XML diff
    // Note: XML Unit 2.8+ contains all necessary JAXB/Jakarta dependencies
    // see https://github.com/xmlunit/xmlunit/releases/tag/v2.8.0
    implementation 'org.xmlunit:xmlunit-core:2.8.1'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:3.0.0' // https://eclipse-ee4j.github.io/jaxb-ri/
    implementation 'com.sun.xml.bind:jaxb-impl:3.0.0'
    // implementation 'javax.xml.bind:jaxb-api:2.3.0'
    // implementation 'org.glassfish.jaxb:jaxb-runtime:3.0.0'
    // implementation 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.3' // javax.xml.bind.annotation
    // implementation 'jakarta.activation:jakarta.activation-api:1.2.2'
    // compile group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '3.0.0'
    // implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.3'

    // implementation 'javax.xml.bind:jaxb-api:2.3.1'
    // implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'
    // implementation 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.2'
    // implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.2'

    implementation 'net.sf.jasperreports:jasperreports:6.16.0'
    implementation 'net.sf.jasperreports:jasperreports-fonts:6.16.0'
    implementation 'commons-beanutils:commons-beanutils:1.9.3'
    implementation 'commons-digester:commons-digester:2.1'
    implementation 'commons-logging:commons-logging:1.1.1'
    implementation 'org.apache.commons:commons-collections4:4.2'
    /*
    implementation ('org.hibernate:hibernate-core:5.4.1.Final') {
        exclude group: 'javax.transaction', module: 'jta'
    }*/
    implementation ('com.lowagie:itext:2.1.7') {
        // exclude group: 'org.bouncycastle', module: 'bcmail-jdk15on'
        // exclude group: 'org.bouncycastle', module: 'bcpkix-jdk15on'
    }
    /* implementation 'com.adobe.xmp:xmpcore:5.1.3' */
    implementation ('org.jfree:jcommon:1.0.23') {
        exclude group: 'gnujaxp', module: 'gnujaxp'
    }
    implementation ('org.jfree:jfreechart:1.0.19') {
        exclude group: 'gnujaxp', module: 'gnujaxp'
    }
    /* implementation 'org.apache.poi:poi:4.0.1'
    // implementation 'org.apache.poi:poi-ooxml:4.0.1' // see below
    // javax.servlet provided
    implementation 'xalan:xalan:2.7.2'
    // .. more
    */
    implementation ('org.codehaus.castor:castor-xml:1.4.1') {
        exclude group: 'org.springframework', module: 'spring-context'
    }
    /* implementation 'javax.xml.soap:javax.xml.soap-api:1.4.0'
    implementation ('javax.xml.soap:saaj-api:1.3') {
        exclude group: 'javax.activation', module: 'activation'
    }*/
    // implementation 'com.sun.xml.ws:jaxws-ri:2.3.2' // SOAP missing

    implementation 'org.apache.logging.log4j:log4j-core:2.8.2'
    implementation 'org.apache.logging.log4j:log4j-jcl:2.8.2'
    implementation group:"com.fasterxml.jackson.core", name:"jackson-core", version:'2.9.9'
    implementation group:"com.fasterxml.jackson.core", name:"jackson-databind", version:'2.9.9'
    implementation group:"com.fasterxml.jackson.core", name:"jackson-annotations", version:'2.9.9'
    // implementation 'org.codehaus.groovy:groovy-all:2.4.16'

    implementation 'org.apache.poi:poi-ooxml:4.0.1'

    implementation 'com.udojava:EvalEx:2.4'

    implementation 'com.ibm.icu:icu4j:65.1'

	// test dependencies
	testCompile group: 'junit', name: 'junit', version: '4.13'
}

repositories {
    mavenCentral()
	// maven {url 'https://oss.sonatype.org/content/repositories/snapshots'}     // This is added for snapshot
}

javafx {
    version = '16-ea+5' // '14.0.2.1'
    // version = '13.0.1'
    modules = ['javafx.controls', 'javafx.swing', 'javafx.fxml', 'javafx.media', 'javafx.web']
}

run {
    if (osdetector.os == 'windows') {
        // Temporal fix for Eclipse with JDK 1.8 and Windows
        systemProperty "java.library.path", "C:tmp"
    }
}

// xjcGenerate
xjc {
    // default: src/main/schema
    // source = fileTree('src/main/resources') { include '*.xsd' }
    // srcDirName = 'src/main/resources'
    xjcVersion = '3.0'
}

version = '20.12.17'
def company = 'My Company'

mainClassName = "com.example/com.example.HelloFX"

application {
    applicationDefaultJvmArgs =  [
            "--add-opens=javafx.base/com.sun.javafx.runtime=org.controlsfx.controls",
            "--add-opens=javafx.base/com.sun.javafx.collections=org.controlsfx.controls",
			"--add-opens=javafx.base/com.sun.javafx.event=org.controlsfx.controls",
            // "--add-opens=javafx.base/com.sun.javafx.event=ALL-UNNAMED",
            "--add-opens=javafx.graphics/com.sun.javafx.css=org.controlsfx.controls",
			// "--add-opens=javafx.graphics/com.sun.javafx.css=ALL-UNNAMED",
            "--add-opens=javafx.graphics/com.sun.javafx.scene=org.controlsfx.controls",
            "--add-opens=javafx.graphics/com.sun.javafx.scene.traversal=org.controlsfx.controls",
            "--add-opens=javafx.graphics/javafx.scene=org.controlsfx.controls",
            "--add-opens=javafx.controls/com.sun.javafx.scene.control=org.controlsfx.controls",
            "--add-opens=javafx.controls/com.sun.javafx.scene.control.behavior=org.controlsfx.controls",
            "--add-opens=javafx.controls/javafx.scene.control.skin=org.controlsfx.controls",
            // Jasperreports (XML parsing or use javax.xml.soap as in JR pom ?)
            "--add-opens=java.xml/com.sun.org.apache.xerces.internal.impl=ALL-UNNAMED",
            "--add-opens=java.xml/com.sun.org.apache.xerces.internal.impl=com.example",
            "--add-opens=java.xml/com.sun.org.apache.xerces.internal.impl=jasperreports",
            "--add-opens=java.xml/com.sun.org.apache.xerces.internal.parsers=ALL-UNNAMED",
            "--add-opens=java.xml/com.sun.org.apache.xerces.internal.parsers=com.example",
            "--add-opens=java.xml/com.sun.org.apache.xerces.internal.parsers=jasperreports",
            "--add-opens=java.xml/com.sun.org.apache.xerces.internal.jaxp=ALL-UNNAMED",
            "--add-opens=java.xml/com.sun.org.apache.xerces.internal.jaxp=com.example",
            "--add-opens=java.xml/com.sun.org.apache.xerces.internal.jaxp=jasperreports",
            // Jasperreports (allow bean reflection) / Groovy
            /*
            "--add-opens=java.base/java.lang=ALL-UNNAMED",
            "--add-opens=java.base/java.lang=com.example",
            "--add-opens=java.base/java.lang=jasperreports",
            "--add-opens=java.base/java.lang=commons.beanutils",
            "--add-opens=java.base/java.lang.invoke=ALL-UNNAMED",
            "--add-opens=java.base/java.lang.invoke=com.example",
            "--add-opens=java.base/java.lang.invoke=jasperreports",
            "--add-opens=java.base/java.lang.invoke=commons.beanutils",
            "--add-opens=java.base/java.lang.reflect=ALL-UNNAMED",
            "--add-opens=java.base/java.lang.reflect=com.example",
            "--add-opens=java.base/java.lang.reflect=jasperreports",
            "--add-opens=java.base/java.lang.reflect=commons.beanutils", */
    ]
}

jlink {
    // https://github.com/beryx/badass-jlink-plugin/issues/59 -> gradlew suggestMergedModuleInfo
    /*mergedModule {
        requires "java.xml"
    }*/
    /* mergedModule {
        // requires 'java.xml.bind';
        requires 'java.logging'
        requires 'java.xml'
        requires 'java.desktop'
        requires 'java.datatransfer'
        // needed?
        requires 'java.xml.crypto'
        requires 'java.security.jgss'
        requires 'jdk.javadoc'
        // Jasperreports
        requires 'java.sql'
        requires 'java.sql.rowset'
        requires 'java.scripting'
        requires 'java.management'
        // requires 'java.xml.bind'
        // uses 'javax.annotation.processing.Processor'
        // uses 'java.nio.file.spi.FileSystemProvider'
        // requires 'jasperreports.fonts';
        // requires 'java.xml.soap'
    } */

    // runtime image produced by jlink: build\image\bin\hello-fx.bat
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        // name = 'sliding-puzzle'
        // name = 'com.example/com.example.HelloFX'
        name = 'hello-fx'
        jvmArgs = [
                "--add-exports", "javafx.base/com.sun.javafx.event=org.controlsfx.controls"
        ]
        // jvmArgs = ['-Dfxgl.sliding.puzzle.dummy=nothing', '-Dfxgl.sliding.puzzle.title=something']
    }
    jpackage {
        // Set the environment property BADASS_JLINK_JPACKAGE_HOME or explicitly configure the below property
        def os = org.gradle.internal.os.OperatingSystem.current()
        if(os.macOsX) {
            jpackageHome = '/Library/Java/JavaVirtualMachines/jdk-14-jpackage.jdk/Contents/Home'
        } else if(os.windows) {
            jpackageHome = 'C:/Program Files/Java/jdk-16-ea+28'
        }
        jvmArgs = []
        // jvmArgs = ['-Dfxgl.sliding.puzzle.dummy=nothingElse', '-Dfxgl.sliding.puzzle.title=somethingElse']
        installerOptions = [
                // '--file-associations', 'src/main/resources/associations.properties',
                '--app-version', version,
                '--vendor', company,
                '--copyright', company,
        ]
        if(os.macOsX) {
            imageOptions = ['--icon', 'src/main/deploy/package/macosx/hello.icns']
            installerOptions += [
/*
                '--mac-sign',
                '--mac-signing-key-user-name', System.getenv('SIGNING_KEY_USER_NAME'),
                '--mac-signing-keychain', System.getenv('SIGNING_KEYCHAIN_PATH')
*/
            ]
        } else if(os.windows) {
            imageOptions = ['--icon', 'src/main/deploy/package/windows/hello.ico']
            installerOptions += [
                    '--win-per-user-install',
                    // , '--win-dir-chooser'
                    '--win-menu',
                    '--win-menu-group', company,
                    '--win-shortcut',
                    // '--win-upgrade-uuid', '027D194C-359B-11B2-A85C-C5D71105C10C',
            ]
        }
    }
}

apply plugin : 'java'